#!/bin/bash
<%
service = "terracotta"
plan = properties.terracotta_node.plan
plan_conf = properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
node = properties.terracotta_node
%>
JOB_DIR=/var/vcap/jobs/terracotta_node_ng
PKG_DIR=/var/vcap/packages/terracotta_node
TERRACOTTA_DIR=/var/vcap/packages/terracotta

SERVICE_NAME="terracotta"
SOCKET_FILE=<%= node.warden_socket_path || "/tmp/warden.sock" %>
source $PKG_DIR/common/services/utils.sh

case $1 in

  start)
    echo "Setup warden."
    setup_warden

    <% if plan_conf && plan_conf.shmmax %>
    sysctl -w 'kernel.shmmax=<%=plan_conf.shmmax%>'
    <%else%>
    sysctl -w 'kernel.shmmax=284934144'
    <%end%>

    <% if plan_conf && plan_conf.shmall%>
    sysctl -w 'kernel.shmall=<%=plan_conf.shmall%>'
    <%end%>

    for version in "3.7.5"
    do
      case "$version" in
        "3.7.5")
          TERRACOTTA_DIR=/var/vcap/packages/terracotta
          SRC_CONF_FILE=$JOB_DIR/config/terracotta.xml

          ;;
      esac

      # update terracotta.conf in initdb
      rsync -arl $SRC_CONF_FILE $TERRACOTTA_DIR/terracotta.xml
    done

    echo "Starting warden."
    start_warden
    ;;

  stop)
    if [ -f /var/vcap/sys/run/warden/warden.pid ]; then
      PIDFILE=/var/vcap/sys/run/warden/warden.pid
    fi
    kill_and_wait $PIDFILE
    ;;

  *)
    echo "Usage: warden_ctl {start|stop}"
    ;;

esac
