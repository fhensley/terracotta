---
<%
service = "terracotta"
plan = properties.terracotta_node.plan
plan_conf = properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
lifecycle = properties.service_lifecycle
use_warden = plan_conf.warden && plan_conf.warden.enable
node = properties.terracotta_node
supported_versions = node.supported_versions

version_configs = {
  '3.7.5' => {
    'binary_dir'  => '/var/vcap/packages/terracotta/bin',
  }
}
%>
<% if lifecycle and lifecycle.resque %>
<% snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot" %>
service_name: terracotta
snapshots_base_dir: <%= snapshot_dir %>
serialization_base_dir: <%= snapshot_dir %>
local_db: sqlite3:/var/vcap/store/terracotta_node.db
tmp_dir: <%= properties.service_lifecycle.tmp_dir || "/tmp" %>
resque:
  host: <%= properties.service_lifecycle.resque.host %>
  port: <%= properties.service_lifecycle.resque.port %>
  password: "<%= properties.service_lifecycle.resque.password %>"
  expire: <%= properties.service_lifecycle.resque.expire %>
logging:
  level: debug
  file: /var/vcap/sys/log/terracotta_node/terracotta_worker.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.terracotta_worker
  <% end %>
index: <%= spec.index %>
node_id: <%= "#{service}_node_#{plan}_#{spec.index}" %>
download_url_template: "http://<%= lifecycle.download_url %>/serialized/%{service}/%{name}/snapshots/%{snapshot_id}?token=%{token}"
snapshot_quota: <%= plan_conf.lifecycle && plan_conf.lifecycle.snapshot && plan_conf.lifecycle.snapshot.quota || 0 %>
# optional download tuning
serialization:
  max_download_size_mb: <%= properties.service_lifecycle.serialization_max_download_size || 10 %>

<%if use_warden%>
use_warden: true
<%end%>
<% end %>
